import pygame
import sys
import math
from robot import Robot
from ui import create_buttons, ColorSwatches
from movement import MovementPattern

# üìç ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Pygame ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Å‡∏£‡∏≤‡∏ü‡∏¥‡∏Å‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÇ‡∏ï‡πâ‡∏ï‡∏≠‡∏ö
pygame.init()

# üìç ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏î‡πâ
SCREEN_WIDTH, SCREEN_HEIGHT = 800, 600
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT), pygame.RESIZABLE)
pygame.display.set_caption("Robot Movement Simulation")  # üñºÔ∏è ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á

# üìç ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
WHITE = (255, 255, 255)
BG_COLOR = (20, 30, 40)
DARK_BLUE = (44, 62, 80)
TECH_BLUE = (100, 150, 200)
GLOW_COLOR = (150, 200, 255)

# üìç ‡πÇ‡∏´‡∏•‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÅ‡∏•‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
FONT_PATH = "assets/Orbitron/static/Orbitron-Bold.ttf"
FONT = pygame.font.Font(FONT_PATH, 64) 
FONT_SMALL = pygame.font.Font(FONT_PATH, 40)
FONT_TINY = pygame.font.Font(FONT_PATH, 24)

# üìç ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡πá‡∏≠‡∏ö‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á
robot = Robot()

# üìç ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏£‡∏≠‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏π‡∏õ‡∏ó‡∏£‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà
WIDTH = 150
HEIGHT = 150

# üìç ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏π‡∏õ‡∏ó‡∏£‡∏á‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Å‡∏£‡∏≠‡∏ö WIDTH x HEIGHT
circle_radius = min(WIDTH / 2, HEIGHT / 2)  # ‡∏£‡∏±‡∏®‡∏°‡∏µ‡∏ß‡∏á‡∏Å‡∏•‡∏°
oval_a = WIDTH / 2  # ‡πÅ‡∏Å‡∏ô x ‡∏Ç‡∏≠‡∏á‡∏ß‡∏á‡∏£‡∏µ
oval_b = oval_a / 1.5  # ‡πÅ‡∏Å‡∏ô y ‡∏Ç‡∏≠‡∏á‡∏ß‡∏á‡∏£‡∏µ
radius = min(WIDTH / 2, HEIGHT / 2)  # ‡∏£‡∏±‡∏®‡∏°‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏´‡∏•‡∏≤‡∏¢‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°
triangle_side = 2 * radius * math.tan(math.pi / 3)  # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏î‡πâ‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°
square_side = 2 * radius  # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏î‡πâ‡∏≤‡∏ô‡∏™‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°
pentagon_side = 2 * radius * math.tan(math.pi / 5)  # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏î‡πâ‡∏≤‡∏ô‡∏´‡πâ‡∏≤‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°
hexagon_side = 2 * radius * math.tan(math.pi / 6)  # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏î‡πâ‡∏≤‡∏ô‡∏´‡∏Å‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°
heptagon_side = 2 * radius * math.tan(math.pi / 7)  # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏î‡πâ‡∏≤‡∏ô‡πÄ‡∏à‡πá‡∏î‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°
octagon_side = 2 * radius * math.tan(math.pi / 8)  # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏î‡πâ‡∏≤‡∏ô‡πÅ‡∏õ‡∏î‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°
straight_length = WIDTH  # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡πÄ‡∏™‡πâ‡∏ô‡∏ï‡∏£‡∏á

# üìç ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏™‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà (patterns) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå
patterns = [
    MovementPattern("straight", length=straight_length, steps=400),
    MovementPattern("circle", radius=circle_radius, steps=400),
    MovementPattern("oval", a=oval_a, b=oval_b, steps=400),
    MovementPattern("triangle", side_length=triangle_side, steps=400),
    MovementPattern("square", side_length=square_side, steps=400),
    MovementPattern("pentagon", side_length=pentagon_side, steps=400),
    MovementPattern("hexagon", side_length=hexagon_side, steps=400),
    MovementPattern("heptagon", side_length=heptagon_side, steps=400),
    MovementPattern("octagon", side_length=octagon_side, steps=400),
    MovementPattern("Colors"),  # ‡∏õ‡∏∏‡πà‡∏°‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏µ
]

# üìç ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏à‡∏≤‡∏Å patterns ‡πÅ‡∏•‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏Å‡∏±‡∏ö‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå
buttons = create_buttons(robot, patterns)
swatches = None  # üé® ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏ô‡∏™‡∏µ (‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô None)

# üìç ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ) ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πá‡∏ô None ‡∏ñ‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
try:
    background_image = pygame.image.load(
        "assets/network_background.png"
    ).convert_alpha()
except:
    background_image = None


# üìç ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡πÄ‡∏£‡∏∑‡∏≠‡∏á‡πÅ‡∏™‡∏á
def draw_text_with_glow(text, x, y, font, screen, text_color, glow_color):
    text_surface = font.render(text, True, text_color)
    glow_surface = font.render(text, True, glow_color)
    for i in range(1, 2):  # ‡∏ß‡∏≤‡∏î‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡πÄ‡∏£‡∏∑‡∏≠‡∏á‡πÅ‡∏™‡∏á‡∏£‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        for dx, dy in [(-i, 0), (i, 0), (0, -i), (0, i)]:
            screen.blit(glow_surface, (x + dx, y + dy))
    screen.blit(text_surface, (x, y))


# üìç ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏≤‡∏î‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
def draw_simple_robot(screen, center_x, center_y, scale=1):
    robot_color = (150, 200, 255)  # ‡∏™‡∏µ‡∏ü‡πâ‡∏≤‡∏≠‡πà‡∏≠‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå
    eye_color = (255, 255, 255)  # ‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏≤
    antenna_color = (200, 200, 200)  # ‡∏™‡∏µ‡πÄ‡∏ó‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏™‡∏≤‡∏≠‡∏≤‡∏Å‡∏≤‡∏®
    head_size = 60 * scale  # ‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏±‡∏ß
    head_rect = pygame.Rect(
        center_x - head_size // 2, center_y - head_size // 2, head_size, head_size
    )
    pygame.draw.rect(screen, robot_color, head_rect)  # ‡∏ß‡∏≤‡∏î‡∏´‡∏±‡∏ß‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°
    eye_radius = 10 * scale
    eye_offset_x = 15 * scale
    left_eye_pos = (center_x - eye_offset_x, center_y)
    right_eye_pos = (center_x + eye_offset_x, center_y)
    pygame.draw.circle(screen, eye_color, left_eye_pos, eye_radius)  # ‡∏ß‡∏≤‡∏î‡∏ï‡∏≤‡∏ã‡πâ‡∏≤‡∏¢
    pygame.draw.circle(screen, eye_color, right_eye_pos, eye_radius)  # ‡∏ß‡∏≤‡∏î‡∏ï‡∏≤‡∏Ç‡∏ß‡∏≤
    ear_radius = 25 * scale
    left_ear_pos = (center_x - head_size // 2, center_y)
    right_ear_pos = (center_x + head_size // 2, center_y)
    pygame.draw.circle(
        screen,
        robot_color,
        left_ear_pos,
        ear_radius,
        0,
        draw_top_left=True,
        draw_bottom_left=True,
    )  # ‡∏ß‡∏≤‡∏î‡∏´‡∏π‡∏ã‡πâ‡∏≤‡∏¢
    pygame.draw.circle(
        screen,
        robot_color,
        right_ear_pos,
        ear_radius,
        0,
        draw_top_right=True,
        draw_bottom_right=True,
    )  # ‡∏ß‡∏≤‡∏î‡∏´‡∏π‡∏Ç‡∏ß‡∏≤
    antenna_height = 20 * scale
    pygame.draw.line(
        screen,
        antenna_color,
        (center_x, center_y - head_size // 2),
        (center_x, center_y - head_size // 2 - antenna_height),
        3,
    )  # ‡∏ß‡∏≤‡∏î‡πÄ‡∏™‡∏≤‡∏≠‡∏≤‡∏Å‡∏≤‡∏®
    pygame.draw.circle(
        screen, antenna_color, (center_x, center_y - head_size // 2 - antenna_height), 5
    )  # ‡∏ß‡∏≤‡∏î‡∏à‡∏∏‡∏î‡∏ö‡∏ô‡πÄ‡∏™‡∏≤‡∏≠‡∏≤‡∏Å‡∏≤‡∏®
    leg_width = 20 * scale
    leg_height = 30 * scale
    leg_pos = (center_x - leg_width // 2, center_y + head_size // 2)
    leg_points = [
        (leg_pos[0], leg_pos[1]),
        (leg_pos[0] + leg_width, leg_pos[1]),
        (leg_pos[0] + leg_width // 2, leg_pos[1] + leg_height),
    ]
    pygame.draw.polygon(screen, robot_color, leg_points)  # ‡∏ß‡∏≤‡∏î‡∏Ç‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≤‡∏°‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°


# üìç ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
def start_screen():
    global screen, background_image, FONT, FONT_SMALL, FONT_TINY, SCREEN_WIDTH, SCREEN_HEIGHT
    running = True
    while running:
        # üìç ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÅ‡∏•‡∏∞‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
        font_scale = min(SCREEN_WIDTH / 800, SCREEN_HEIGHT / 600)
        scale = min(SCREEN_WIDTH / 800, SCREEN_HEIGHT / 600)
        FONT = pygame.font.Font(FONT_PATH, int(64 * font_scale))
        FONT_SMALL = pygame.font.Font(FONT_PATH, int(40 * font_scale))
        FONT_TINY = pygame.font.Font(FONT_PATH, int(24 * font_scale))
        start_button = pygame.Rect(
            SCREEN_WIDTH // 2 - int(120 * font_scale),
            int(SCREEN_HEIGHT * 0.75),
            int(240 * font_scale),
            int(70 * font_scale),
        )

        # üìç ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏•‡∏π‡∏õ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        for event in pygame.event.get():
            # üö™ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡∏ñ‡πâ‡∏≤‡∏Å‡∏î‡∏à‡∏∞‡∏´‡∏¢‡∏∏‡∏î‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            # üìè ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÅ‡∏•‡∏∞‡∏†‡∏≤‡∏û‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
            if event.type == pygame.VIDEORESIZE:
                SCREEN_WIDTH, SCREEN_HEIGHT = event.w, event.h
                screen = pygame.display.set_mode(
                    (SCREEN_WIDTH, SCREEN_HEIGHT), pygame.RESIZABLE
                )
                if background_image:
                    background_image_scaled = pygame.transform.smoothscale(
                        background_image, (SCREEN_WIDTH, SCREEN_HEIGHT)
                    )  # üñºÔ∏è ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏†‡∏≤‡∏û‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
            # üñ±Ô∏è ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏°‡∏≤‡∏™‡πå ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° "START"
            if event.type == pygame.MOUSEBUTTONDOWN:
                mouse_pos = pygame.mouse.get_pos()
                if start_button.collidepoint(mouse_pos):
                    return False  # üö™ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å "START"

        # üìç ‡∏ß‡∏≤‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        if background_image:
            screen.blit(
                (
                    background_image_scaled
                    if "background_image_scaled" in locals()
                    else background_image
                ),
                (0, 0),
            )
        else:
            screen.fill(BG_COLOR)
        robot_text = "ROBOT"
        robot_surface = FONT.render(robot_text, True, WHITE)
        robot_x = SCREEN_WIDTH // 2 - robot_surface.get_width() // 2
        robot_y = int(SCREEN_HEIGHT * 0.2)
        draw_text_with_glow(
            robot_text, robot_x, robot_y, FONT, screen, WHITE, GLOW_COLOR
        )  # ‚úçÔ∏è ‡∏ß‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "ROBOT"
        robot_pos_y = int(SCREEN_HEIGHT * 0.45)
        draw_simple_robot(screen, SCREEN_WIDTH // 2, robot_pos_y, scale)  # ü§ñ ‡∏ß‡∏≤‡∏î‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå
        subtitle_text = "Robot Movement Simulation"
        subtitle_surface = FONT_TINY.render(subtitle_text, True, TECH_BLUE)
        subtitle_x = SCREEN_WIDTH // 2 - subtitle_surface.get_width() // 2
        subtitle_y = robot_pos_y + int(80 * scale)
        draw_text_with_glow(
            subtitle_text,
            subtitle_x,
            subtitle_y,
            FONT_TINY,
            screen,
            TECH_BLUE,
            GLOW_COLOR,
        )  # ‚úçÔ∏è ‡∏ß‡∏≤‡∏î‡∏Ñ‡∏≥‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏¢
        mouse_pos = pygame.mouse.get_pos()
        mouse_hover = start_button.collidepoint(mouse_pos)
        pygame.draw.rect(
            screen,
            (150, 200, 255) if mouse_hover else TECH_BLUE,
            start_button,
            border_radius=10,
        )  # üé® ‡∏ß‡∏≤‡∏î‡∏õ‡∏∏‡πà‡∏° "START" ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå hover
        start_text = "START"
        start_surface = FONT_SMALL.render(start_text, True, WHITE)
        start_x = start_button.centerx - start_surface.get_width() // 2
        start_y = start_button.centery - start_surface.get_height() // 2
        draw_text_with_glow(
            start_text, start_x, start_y, FONT_SMALL, screen, WHITE, GLOW_COLOR
        )  # ‚úçÔ∏è ‡∏ß‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "START"
        pygame.display.flip()  # üîÑ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠

    return True


# üìç ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏•‡∏π‡∏õ‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
show_start = True  # üö™ ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
running = True
clock = pygame.time.Clock()  # ‚è±Ô∏è ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÄ‡∏ü‡∏£‡∏°‡πÄ‡∏£‡∏ó
while running:
    clock.tick(60)  # ‚è±Ô∏è ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÄ‡∏ü‡∏£‡∏°‡πÄ‡∏£‡∏ó‡∏ó‡∏µ‡πà 60 FPS
    screen.fill(BG_COLOR)  # üñºÔ∏è ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á

    # üìç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if show_start:
        show_start = start_screen()  # üö™ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    else:
        # üìç ‡∏ß‡∏≤‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°
        for button in buttons:
            button.draw(screen)  # üé® ‡∏ß‡∏≤‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°
        robot.update()  # ü§ñ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå
        robot.draw(screen)  # ü§ñ ‡∏ß‡∏≤‡∏î‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á
        if swatches:
            swatches.draw(screen)  # üé® ‡∏ß‡∏≤‡∏î‡∏à‡∏≤‡∏ô‡∏™‡∏µ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ

    pygame.display.flip()  # üîÑ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

    # üìç ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏•‡∏π‡∏õ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏≥ (‡πÄ‡∏ä‡πà‡∏ô ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏°‡∏≤‡∏™‡πå, ‡∏Å‡∏î‡∏Ñ‡∏µ‡∏¢‡πå‡∏ö‡∏≠‡∏£‡πå‡∏î, ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á)
    for event in pygame.event.get():
        # üö™ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡∏ñ‡πâ‡∏≤‡∏Å‡∏î‡∏à‡∏∞‡∏´‡∏¢‡∏∏‡∏î‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
        if event.type == pygame.QUIT:
            running = False

        # üñ±Ô∏è ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏≤‡∏™‡πå ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏≤‡∏™‡πå‡∏ä‡∏µ‡πâ (hover)
        elif event.type == pygame.MOUSEMOTION:
            for button in buttons:
                button.check_hover(event.pos)  # üé® ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ hover ‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°

        # üñ±Ô∏è ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏°‡∏≤‡∏™‡πå ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÇ‡∏ï‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡πâ‡∏≤‡∏¢‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå
        elif event.type == pygame.MOUSEBUTTONDOWN:
            mouse_pos = event.pos
            clicked_on_button = False

            # üé® ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏à‡∏≤‡∏ô‡∏™‡∏µ (swatches) ‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏¢‡∏π‡πà ‡πÉ‡∏´‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏µ
            if swatches:
                if swatches.handle_event(event, robot):  # ü§ñ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏™‡∏µ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå
                    swatches = None  # üö´ ‡∏ã‡πà‡∏≠‡∏ô‡∏à‡∏≤‡∏ô‡∏™‡∏µ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏µ‡πÄ‡∏™‡∏£‡πá‡∏à
                continue

            # üîÑ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° (‡πÄ‡∏ä‡πà‡∏ô "Circle", "Square") ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            for button in buttons:
                if button.is_clicked(event.pos):
                    clicked_on_button = True
                    for other_button in buttons:
                        if other_button != button:
                            other_button.release()  # üñ±Ô∏è ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏∑‡πà‡∏ô ‡πÜ

                    # üé® ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° "Colors" ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≤‡∏ô‡∏™‡∏µ
                    if button.text == "Colors":
                        swatches = ColorSwatches(200, 100, 5, 4)  # üé® ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏≤‡∏ô‡∏™‡∏µ 5x4
                    else:
                        # üõ§Ô∏è ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏£‡∏π‡∏õ‡∏ó‡∏£‡∏á (‡πÄ‡∏ä‡πà‡∏ô "Circle") ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà
                        movement = button.action()
                        if movement:
                            print(
                                f"Running movement: {button.text}"
                            )  # üìú ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏ô‡πÇ‡∏ã‡∏•
                            robot.reset_position(
                                SCREEN_WIDTH // 2, SCREEN_HEIGHT // 2
                            )  # üìç ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå‡πÑ‡∏õ‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á
                            robot.set_movement(movement)  # üõ†Ô∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏°‡πà
                            robot.set_current_movement(
                                button.action
                            )  # üî¢ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏ã‡πâ‡∏≥
                            robot.set_visible(True)  # üëÄ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡πÑ‡∏î‡πâ
                    break

            # üìç ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° ‡πÉ‡∏´‡πâ‡∏¢‡πâ‡∏≤‡∏¢‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏•‡∏¥‡∏Å
            if not clicked_on_button:
                robot.move_to(mouse_pos[0], mouse_pos[1])  # ü§ñ ‡∏¢‡πâ‡∏≤‡∏¢‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå‡πÑ‡∏õ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏•‡∏¥‡∏Å
                robot.set_visible(True)  # üëÄ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡πÑ‡∏î‡πâ

        # üñ±Ô∏è ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡πà‡∏≠‡∏¢‡πÄ‡∏°‡∏≤‡∏™‡πå ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏∏‡πà‡∏°
        elif event.type == pygame.MOUSEBUTTONUP:
            for button in buttons:
                button.release()  # üñ±Ô∏è ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏õ‡∏•‡πà‡∏≠‡∏¢‡πÄ‡∏°‡∏≤‡∏™‡πå

        # ‚å®Ô∏è ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏Ñ‡∏µ‡∏¢‡πå‡∏ö‡∏≠‡∏£‡πå‡∏î ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡∏´‡∏±‡∏ß‡∏´‡∏∏‡πà‡∏ô‡∏¢‡∏ô‡∏ï‡πå (W, A, S, D)
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_w:
                robot.angle = -math.pi / 2  # üìê ‡∏ä‡∏µ‡πâ‡∏Ç‡∏∂‡πâ‡∏ô
            elif event.key == pygame.K_s:
                robot.angle = math.pi / 2  # üìê ‡∏ä‡∏µ‡πâ‡∏•‡∏á
            elif event.key == pygame.K_a:
                robot.angle = math.pi  # üìê ‡∏ä‡∏µ‡πâ‡∏ã‡πâ‡∏≤‡∏¢
            elif event.key == pygame.K_d:
                robot.angle = 0  # üìê ‡∏ä‡∏µ‡πâ‡∏Ç‡∏ß‡∏≤

        # üìè ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÅ‡∏•‡∏∞‡∏†‡∏≤‡∏û‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
        elif event.type == pygame.VIDEORESIZE:
            SCREEN_WIDTH, SCREEN_HEIGHT = event.w, event.h
            screen = pygame.display.set_mode(
                (SCREEN_WIDTH, SCREEN_HEIGHT), pygame.RESIZABLE
            )  # üìè ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
            if background_image:
                background_image_scaled = pygame.transform.smoothscale(
                    background_image, (SCREEN_WIDTH, SCREEN_HEIGHT)
                )  # üñºÔ∏è ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏†‡∏≤‡∏û‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÉ‡∏´‡∏°‡πà

# üö™ ‡∏õ‡∏¥‡∏î Pygame ‡πÅ‡∏•‡∏∞‡∏´‡∏¢‡∏∏‡∏î‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏•‡∏π‡∏õ‡∏´‡∏•‡∏±‡∏Å
pygame.quit()
